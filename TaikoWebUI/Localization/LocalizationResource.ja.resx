<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="dashboard" xml:space="preserve">
    <value>メニュー</value>
  </data>
  <data name="users" xml:space="preserve">
    <value>ユーザー管理</value>
  </data>
  <data name="edit profile" xml:space="preserve">
    <value>プロフィール編集</value>
  </data>
  <data name="user" xml:space="preserve">
    <value>ユーザー</value>
  </data>
  <data name="view play data" xml:space="preserve">
    <value>プレイデータ</value>
  </data>
  <data name="high scores" xml:space="preserve">
    <value>演奏ゲーム</value>
  </data>
  <data name="dani dojo" xml:space="preserve">
    <value>段位道場</value>
  </data>
  <data name="Show QR Code" xml:space="preserve">
    <value>QRコード</value>
  </data>
  <data name="Manage Access Codes" xml:space="preserve">
    <value>アクセスコード管理</value>
  </data>
  <data name="Change Password" xml:space="preserve">
    <value>パスワード変更</value>
  </data>
  <data name="Reset Password" xml:space="preserve">
    <value>パスワードリセット</value>
  </data>
  <data name="Delete User" xml:space="preserve">
    <value>ユーザー削除</value>
  </data>
  <data name="Welcome to TaikoWebUI!" xml:space="preserve">
    <value>TaikoWebUIへようこそ!</value>
  </data>
  <data name="Song" xml:space="preserve">
    <value>曲名</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>★数</value>
  </data>
  <data name="Genre" xml:space="preserve">
    <value>ジャンル</value>
  </data>
  <data name="Best Score" xml:space="preserve">
    <value>ベストスコア</value>
  </data>
  <data name="Best Crown" xml:space="preserve">
    <value>ベスト王冠</value>
  </data>
  <data name="Best Rank" xml:space="preserve">
    <value>ベストランク</value>
  </data>
  <data name="Good" xml:space="preserve">
    <value>良</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>可</value>
  </data>
  <data name="Bad" xml:space="preserve">
    <value>不可</value>
  </data>
  <data name="Drumroll" xml:space="preserve">
    <value>連打</value>
  </data>
  <data name="MAX Combo" xml:space="preserve">
    <value>最大コンボ数</value>
  </data>
  <data name="AI Battle Data" xml:space="preserve">
    <value>AIバトル演奏データ</value>
  </data>
  <data name="Last Played" xml:space="preserve">
    <value>ラストプレイ</value>
  </data>
  <data name="Total Plays" xml:space="preserve">
    <value>プレイ回数</value>
  </data>
  <data name="Total Clears" xml:space="preserve">
    <value>クリア回数</value>
  </data>
  <data name="Total Full Combos" xml:space="preserve">
    <value>フルコンボ回数</value>
  </data>
  <data name="Total Donderful Combos" xml:space="preserve">
    <value>ドンダフルコンボ回数</value>
  </data>
  <data name="Key_01" xml:space="preserve">
    <value>自己ベスト</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>隠す</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>表示</value>
  </data>
  <data name="Section No." xml:space="preserve">
    <value>区間</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>結果</value>
  </data>
  <data name="Score" xml:space="preserve">
    <value>スコア</value>
  </data>
  <data name="Crown" xml:space="preserve">
    <value>王冠</value>
  </data>
  <data name="No data." xml:space="preserve">
    <value>データがありません。</value>
  </data>
  <data name="Key_02" xml:space="preserve">
    <value>"ユーザー管理"タブでログインしてください。</value>
  </data>
  <data name="Total Hits" xml:space="preserve">
    <value>叩けた数</value>
  </data>
  <data name="Soul Gauge" xml:space="preserve">
    <value>魂ゲージ</value>
  </data>
  <data name="Songs" xml:space="preserve">
    <value>課題曲</value>
  </data>
  <data name="Conditions" xml:space="preserve">
    <value>条件</value>
  </data>
  <data name="Red" xml:space="preserve">
    <value>赤合格</value>
  </data>
  <data name="Gold" xml:space="preserve">
    <value>金合格</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>不合格</value>
  </data>
  <data name="Pass" xml:space="preserve">
    <value>合格</value>
  </data>
  <data name="Totals" xml:space="preserve">
    <value>合計</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>記録</value>
  </data>
  <data name="Stage" xml:space="preserve">
    <value>曲目</value>
  </data>
  <data name="Key_03" xml:space="preserve">
    <value>段位道場</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>プロフィール</value>
  </data>
  <data name="Profile Options" xml:space="preserve">
    <value>プロフィール設定</value>
  </data>
  <data name="Costume" xml:space="preserve">
    <value>着せ替え</value>
  </data>
  <data name="Costume Options" xml:space="preserve">
    <value>着せ替え設定</value>
  </data>
  <data name="Song Options" xml:space="preserve">
    <value>演奏オプション</value>
  </data>
  <data name="Player" xml:space="preserve">
    <value>プレイヤー</value>
  </data>
  <data name="Achievement Panel" xml:space="preserve">
    <value>総合成績パネル</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>言語</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>称号</value>
  </data>
  <data name="Title Plate" xml:space="preserve">
    <value>称号タイプ</value>
  </data>
  <data name="Achievement Panel Difficulty" xml:space="preserve">
    <value>総合成績パネルの難易度</value>
  </data>
  <data name="Display Dan Rank on Name Plate" xml:space="preserve">
    <value>段位表示</value>
  </data>
  <data name="Display Achievement Panel" xml:space="preserve">
    <value>成績表示</value>
  </data>
  <data name="Difficulty Setting Course" xml:space="preserve">
    <value>むずかしさからえらぶの難易度</value>
  </data>
  <data name="Difficulty Setting Star" xml:space="preserve">
    <value>むずかしさからえらぶの★数</value>
  </data>
  <data name="Difficulty Setting Sort" xml:space="preserve">
    <value>むずかしさからえらぶの表示順</value>
  </data>
  <data name="Select a Title" xml:space="preserve">
    <value>称号を選択してください</value>
  </data>
  <data name="Head" xml:space="preserve">
    <value>あたま</value>
  </data>
  <data name="Body" xml:space="preserve">
    <value>からだ</value>
  </data>
  <data name="Face" xml:space="preserve">
    <value>メイク</value>
  </data>
  <data name="Kigurumi" xml:space="preserve">
    <value>きぐるみ</value>
  </data>
  <data name="Puchi" xml:space="preserve">
    <value>ぷちキャラ</value>
  </data>
  <data name="Body Color" xml:space="preserve">
    <value>どうの色</value>
  </data>
  <data name="Face Color" xml:space="preserve">
    <value>かおの色</value>
  </data>
  <data name="Limb Color" xml:space="preserve">
    <value>てあしの色</value>
  </data>
  <data name="Vanish" xml:space="preserve">
    <value>ドロン</value>
  </data>
  <data name="Inverse" xml:space="preserve">
    <value>あべこべ</value>
  </data>
  <data name="Give Up" xml:space="preserve">
    <value>演奏スキップ</value>
  </data>
  <data name="Voice" xml:space="preserve">
    <value>ボイス</value>
  </data>
  <data name="Speed" xml:space="preserve">
    <value>はやさ</value>
  </data>
  <data name="Random" xml:space="preserve">
    <value>ランダム</value>
  </data>
  <data name="Tone" xml:space="preserve">
    <value>音色</value>
  </data>
  <data name="Notes Position" xml:space="preserve">
    <value>音符位置調整</value>
  </data>
</root>