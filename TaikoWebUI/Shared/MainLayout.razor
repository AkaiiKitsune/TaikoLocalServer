@inherits LayoutComponentBase
@inject HttpClient Client
@inject StateContainer StateContainer
@inject LoginService LoginService
@inject NavigationManager NavigationManager
@inject ILocalStorage LocalStorage

<MudThemeProvider @bind-IsDarkMode=StateContainer.darkMode Theme="Taiko" />
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="0">
        @if(StateContainer.isConnected){
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
            <MudText>@StateContainer.currentTitle</MudText>
        }
        <MudSpacer />
        @* <MudButton Class="mx-1" Variant="Variant.Filled" Color="Color.Primary" Href="/Users" StartIcon=@(StateContainer.darkMode ? @Icons.Material.Filled.LightMode : @Icons.Material.Filled.DarkMode) OnClick="@((e) => ToggleDarkMode())"></MudButton> *@
        @if (!StateContainer.isConnected)
        {
            <MudButton Class="mx-1" Variant="Variant.Filled" Color="Color.Primary" Href="/Users" StartIcon="@Icons.Material.Filled.Login">Login</MudButton>
            <MudButton Class="mx-1" Variant="Variant.Filled" Color="Color.Primary" Href="/Users/Register" StartIcon="@Icons.Material.Filled.AddCard">Register</MudButton>
        }
        else
        {
            <MudMenu TransformOrigin=@Origin.TopRight AnchorOrigin=@Origin.BottomRight Color="Color.Inherit" Icon="@Icons.Material.Filled.MoreVert">
                <MudMenuItem Icon="@Icons.Material.Filled.Edit" Href="@($"Users/{StateContainer.currentUser.Baid}/Profile")">Game Profile</MudMenuItem>
                <MudMenuItem Icon="@Icons.Material.Filled.FeaturedPlayList" Href="@($"Users/{StateContainer.currentUser.Baid}/AccessCode")"> Access Codes</MudMenuItem>
                <MudMenuItem Icon="@Icons.Material.Filled.Lock" Href="Users/ChangePassword">Edit Password</MudMenuItem>
                <MudMenuItem Icon="@Icons.Material.Filled.Logout" IconColor="Color.Error" OnClick="@((e) => Logout())" OnTouch="@((e) => Logout())">Logout</MudMenuItem>
            </MudMenu>
        }
    </MudAppBar>
    @if(StateContainer.isConnected){
        <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
            <MudDrawerHeader>
                <MudText Typo="Typo.h6">TaikoWebUI</MudText>
            </MudDrawerHeader>
            <MudNavMenu>
                @* <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink> *@
                @if (StateContainer.currentUser.IsAdmin)
                {
                    <MudNavLink Href="@("/Users")" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.PersonSearch">User list</MudNavLink>
                }
                <MudNavGroup Expanded=true HideExpandIcon=true Title="@StateContainer.currentUser.Name" Icon="@Icons.Material.Filled.Person" >
                    <MudNavLink Href="@($"Users/{StateContainer.currentUser.Baid}/HighScores")" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Equalizer">High Scores</MudNavLink>
                    <MudNavLink Href="@($"Users/{StateContainer.currentUser.Baid}/DaniDojo")" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Grade">Dani Dojo</MudNavLink>
                    <MudNavLink Href="@($"Users/{StateContainer.currentUser.Baid}/Profile")" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Edit">Game Profile</MudNavLink>
                    <MudNavGroup Title="Settings" Icon="@Icons.Material.Filled.Settings">
                        @if (!StateContainer.currentUser.IsAdmin)
                        {
                            <MudNavLink Href="@("/Users")" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Person">User profile</MudNavLink>
                        }
                        <MudNavLink Href="@($"Users/{StateContainer.currentUser.Baid}/AccessCode")" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.FeaturedPlayList">Access Codes</MudNavLink>
                        <MudNavLink OnClick="@((e) => Logout())" IconColor="Color.Error" Icon="@Icons.Material.Filled.Logout">Logout</MudNavLink>
                    </MudNavGroup>
                </MudNavGroup>
            </MudNavMenu>
        </MudDrawer>
    }
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-8">
            @Body

            <MudScrollToTop>
                <MudFab Color="Color.Secondary" StartIcon="@Icons.Material.Filled.ArrowCircleUp" />
            </MudScrollToTop>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    protected override async Task OnInitializedAsync()
    {
        StateContainer.OnChange += StateHasChanged;
        var user = await LocalStorage.GetStringAsync("user");
        var pass = await LocalStorage.GetStringAsync("pass");
        var saved = !string.IsNullOrEmpty(user) && !string.IsNullOrEmpty(pass);
        if (saved)
        {

            var response = await Client.GetFromJsonAsync<DashboardResponse>("api/Dashboard");
            response.ThrowIfNull();
            var loginStatus = LoginService.Login(user, pass, response);

            if (loginStatus == 1)
            {
                StateContainer.currentUser = LoginService.GetLoggedInUser();
                StateContainer.isConnected = true;
            }
            else
            {
                StateContainer.isConnected = false;
            }
            NavigationManager.NavigateTo("/");
            NavigationManager.NavigateTo("/Users");
        }
    }

    public async Task Logout()
    {
        LoginService.Logout();
        StateContainer.isConnected = false;
        await LocalStorage.RemoveAsync("user");
        await LocalStorage.RemoveAsync("pass");
        NavigationManager.NavigateTo("/Users", forceLoad: true);
    }

    private void ToggleDarkMode()
    {
        StateContainer.darkMode = !StateContainer.darkMode;
    }

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    @code {
        MudTheme Taiko = new MudTheme()
        {
            Palette = new PaletteLight()
            {
                Primary = "#043b42",
                Secondary = "#feb200",
                AppbarBackground = "#043b42",
            },
            PaletteDark = new PaletteDark()
            {
                Primary = "#feb200",
                Secondary = "#043b42",
            },

            // LayoutProperties = new LayoutProperties()
            // {
            //     DrawerWidthLeft = "260px",
            //     DrawerWidthRight = "300px"
            // }
        };
    }
}