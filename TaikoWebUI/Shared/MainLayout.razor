@inherits LayoutComponentBase
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="DrawerToggle" />
        <MudSpacer />
        <ChooseLanguage />
    </MudAppBar>
    <MudDrawer Elevation="0" Style="border-right:1px solid #ededf0" @bind-Open="_drawerOpen">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">TaikoWebUI</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="my-8">
            @Body

            <MudScrollToTop>
                <MudFab Color="Color.Secondary" StartIcon="@Icons.Material.Filled.ArrowCircleUp" />
            </MudScrollToTop>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    protected override async Task OnInitializedAsync()
    {
        var hasLocalStorage = await localStorage.ContainKeyAsync("drawerOpen");

        if (hasLocalStorage)
		{
			_drawerOpen = await localStorage.GetItemAsync<bool>("drawerOpen");
		}
    }

    private async Task DrawerToggle()
	{
		_drawerOpen = !_drawerOpen;
		await localStorage.SetItemAsync("drawerOpen", _drawerOpen);
	}

    private void ToggleDrawer()
	{
		_drawerOpen = !_drawerOpen;
	}
}